{"version":3,"sources":["Food.js","Home.js","App.js","index.js"],"names":["Food","name","place","start","end","className","slice","Home","state","isLoading","isScroll","dgList","exhiLast","getMovies","a","axios","get","then","response","XMLParser","parseFromString","data","exhibition","children","dgShow","splice","setState","handleMore","exhiMore","exhiPush","concat","setTimeout","this","document","getElementById","scrollIntoView","block","id","map","evt","index","value","onClick","React","Component","App","ReactDOM","render"],"mappings":"2QAiBeA,MAbf,YAA4C,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IAClC,OACE,sBAAKC,UAAU,eAAf,UACE,6BAAKJ,EAAKK,MAAM,GAAG,KACnB,sBAAKD,UAAU,YAAf,UACE,+BAAOF,EAAMG,MAAM,GAAG,KACtB,+BAAOF,EAAIE,MAAM,GAAG,QAEtB,mBAAGD,UAAU,aAAb,SAA2BH,EAAMI,MAAM,GAAG,SCgFjCC,E,4MAlFbC,MAAQ,CACNC,WAAW,EACXC,UAAU,EACVC,OAAQ,GACRC,SAAU,I,EAGZC,U,sBAAY,sBAAAC,EAAA,sEACJC,IAAMC,IAAI,8GAA8GC,MAAK,SAACC,GAAa,OAI3I,IAAIC,KAAYC,gBAAgBF,EAASG,MADfC,EAHiH,cAG7IC,SAH6I,MAG3HA,SAEdC,EAASF,EAAWG,OAAO,EAAE,GAEnC,EAAKC,SACH,CACEd,SAAUU,EACVX,OAAQa,EACRf,WAAW,OAZP,2C,EAmCZkB,WAAa,WAAO,IAAD,EACsB,EAAKnB,MAApCG,EADS,EACTA,OAAQC,EADC,EACDA,SACZgB,GAFa,EACSlB,SACXE,EAASa,OAAO,EAAE,IAC7BI,EAAWlB,EAAOmB,OAAOF,GAE7B,EAAKF,SAAS,CAAEf,OAAQkB,EAAUnB,UAAU,K,uDAtB9C,WAAqB,IAAD,OAElBqB,YAAW,WACT,EAAKlB,cACF,Q,gCAGP,WACuBmB,KAAKxB,MAAlBE,UAEOuB,SAASC,eAAe,QAC9BC,eAAe,CAAEC,MAAO,U,oBAcnC,WAAU,IAAD,EACuBJ,KAAKxB,MAA3BC,EADD,EACCA,UAAWE,EADZ,EACYA,OACnB,OACE,yBAAUN,UAAU,YAApB,SACEI,EAEE,qBAAKJ,UAAU,WAGf,cAAC,WAAD,UACA,sBAAKA,UAAU,SAASgC,GAAG,OAA3B,UACI1B,EAAO2B,KAAI,SAACC,EAAKC,GAAN,OAET,cAAC,EAAD,CAEEvC,KAAMsC,EAAIhB,SAAS,GAAGkB,MACtBtC,MAAOoC,EAAIhB,SAAS,GAAGkB,MACvBrC,IAAKmC,EAAIhB,SAAS,GAAGkB,MACrBvC,MAAOqC,EAAIhB,SAAS,GAAGkB,OAJlBD,MAQb,wBAAQE,QAASV,KAAKL,WAAYtB,UAAU,WAA5C,2C,GAzESsC,IAAMC,W,MCeVC,MApBf,WACE,OACE,eAAC,WAAD,WACE,sBAAKxC,UAAU,eAAf,UACE,mBAAGA,UAAU,eAAb,SACE,yIAEF,gEAAS,uBAAT,8BACA,sBAAKA,UAAU,SAAf,UACI,qFACA,qFACA,iGACA,qFAGN,cAAC,EAAD,QCfNyC,IAASC,OACP,cAAC,EAAD,IACAd,SAASC,eAAe,W","file":"static/js/main.2d67d0da.chunk.js","sourcesContent":["import React from 'react';\r\n//import PropTypes from 'prop-types';\r\n//import \"./Movie.css\";\r\n\r\nfunction Food({ name, place, start, end }) {\r\n  return (\r\n    <div className=\"exhi-article\">\r\n      <h3>{name.slice(0,-1)}</h3>\r\n      <div className=\"exhi-time\">\r\n        <span>{start.slice(0,-2)}</span>\r\n        <span>{end.slice(0,-2)}</span>\r\n      </div>\r\n      <p className=\"exhi-place\">{place.slice(0,-1)}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Food;","import React, { Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport XMLParser from 'react-xml-parser';\r\nimport Food from './Food';\r\n\r\n// import \"./Home.css\";\r\n\r\n// https://yts-proxy.now.sh/list_movies.json\r\n\r\nclass Home extends React.Component {  \r\n  state = {\r\n    isLoading: true,\r\n    isScroll: false,\r\n    dgList: [],\r\n    exhiLast: []\r\n  }\r\n\r\n  getMovies = async () => {\r\n    await axios.get('https://cors-anywhere.herokuapp.com/http://dgfc.or.kr/performance/xml/calenderMonth.asp?year=2021&month=04').then((response) => {\r\n      //화살표 함수로 바인딩.\r\n      const {\r\n        children: [ , , { children: exhibition } ]\r\n      } = new XMLParser().parseFromString(response.data);\r\n      const dgShow = exhibition.splice(1,5);\r\n      // console.log(dgShow);\r\n      this.setState(\r\n        { \r\n          exhiLast: exhibition, // 남은 원본\r\n          dgList: dgShow, //추출, 추출 후 원본은 남은 값이 저장됨.\r\n          isLoading: false,\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n    setTimeout(() => {\r\n      this.getMovies()\r\n      }, 1200) // 시간. 2초 후 실행\r\n  }\r\n  \r\n  componentDidUpdate() { \r\n    const { isScroll } = this.state;\r\n    if( isScroll )  {\r\n      let screen = document.getElementById(\"news\");\r\n      screen.scrollIntoView({ block: \"end\" });\r\n      // state 변화시 반응.\r\n    }\r\n    //console.log(this.state.isScroll);\r\n  }\r\n\r\n  handleMore = () => {\r\n    const { dgList, exhiLast, isScroll } = this.state;\r\n    let exhiMore = exhiLast.splice(1,5);\r\n    let exhiPush = dgList.concat(exhiMore);\r\n    // concat 기존 배열에 추가, state에 push()와 같은 함수는 안됨!\r\n    this.setState({ dgList: exhiPush, isScroll: true });\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, dgList } = this.state;    \r\n    return(\r\n      <section  className=\"container\">\r\n      { isLoading\r\n        ? (\r\n          <div className=\"loader\">\r\n          </div>\r\n        ) : (\r\n          <Fragment>\r\n          <div className=\"movies\" id=\"news\">\r\n            { dgList.map((evt, index) => \r\n              (\r\n                <Food \r\n                  key={index} \r\n                  name={evt.children[1].value}\r\n                  start={evt.children[3].value}\r\n                  end={evt.children[4].value}\r\n                  place={evt.children[6].value}\r\n                />\r\n              ) \r\n            )}\r\n          <button onClick={this.handleMore} className=\"btn-more\">더보기</button>\r\n          </div>         \r\n          \r\n          </Fragment>\r\n        )}\r\n    </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Fragment } from 'react';\r\nimport Home from './Home.js';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"left-heading\">\r\n        <p className=\"nail-heading\">\r\n          <span>대구광역시 공공데이터 활용 프로젝트</span>\r\n        </p>\r\n        <h2>대구광역시<br/>공연일정</h2>\r\n        <div className=\"dg-loc\">\r\n            <span> 대구오페라하우스</span>\r\n            <span> 대구문화예술회관</span>\r\n            <span> 대구코오롱야외음악당</span>\r\n            <span> 대구예술발전소</span>\r\n        </div>\r\n      </div>\r\n      <Home />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}